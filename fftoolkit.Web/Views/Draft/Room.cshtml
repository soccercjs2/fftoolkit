@model fftoolkit.Web.Models.DraftRoomViewModel

@{
    Layout = "~/Views/Shared/_DraftRoomLayout.cshtml";
}

@{
    ViewBag.Title = @Model.Draft.Name;
}

@section scripts {
    <script type="text/javascript">

        var penaltyTime = false;
        var timerPaused = true;
        setInterval(function () {
            //check if draft is over
            var currentRound = document.getElementById('CurrentRound').value;
            var currentPick = document.getElementById('CurrentPick').value;
            var teams = @Html.Raw(Json.Encode(Model.Draft.Teams));
            var rounds = @Html.Raw(Json.Encode(Model.Draft.Rounds));

            if (currentRound > rounds) {
                var draftOverContainer = document.getElementById('draft-over-container');
                var draftInProgressContainer = document.getElementById('draft-in-progress-container');

                draftOverContainer.style.display = 'block';
                draftInProgressContainer.style.display = 'none';
            }

            if (timerPaused == false) {
                var minutes = parseInt(document.getElementById('minutes').innerText);
                var seconds = parseInt(document.getElementById('seconds').innerText);

                if (minutes == 0 && seconds == 0) {
                    penaltyTime = true;
                    seconds = 1;
                    document.getElementById('shot-glass-container').innerHTML = "<img src=\"../../Images/shot-glass.png\" width=\"70\" height=\"70\" />";
                }
                else if (seconds == 0 && !penaltyTime) {
                    minutes = minutes - 1;
                    seconds = 59;
                }
                else if (seconds == 59 && penaltyTime) {
                    minutes = minutes + 1;
                    seconds = 0;
                }
                else if (!penaltyTime) {
                    seconds = seconds - 1;

                    if (minutes == 0 && seconds <= 10) {
                        document.getElementById('minutes').style.color = 'red';
                        document.getElementById('seconds').style.color = 'red';
                    }
                }
                else if (penaltyTime) {
                    seconds = seconds + 1;
                }

                if ((!penaltyTime && minutes == 0 && seconds <= 10) || penaltyTime) {
                    if (seconds % 2 == 0) {
                        document.getElementById('draft-clock-container').style.borderColor = "red";
                    }
                    else {
                        document.getElementById('draft-clock-container').style.borderColor = "white";
                    }
                }

                if (penaltyTime && (seconds == 0 || seconds == 30)) {
                    document.getElementById('shot-glass-container').innerHTML += "<img src=\"../../Images/shot-glass.png\" width=\"70\" height=\"70\" />";
                }

                document.getElementById('minutes').innerText = minutes;

                if (seconds < 10) {
                    document.getElementById('seconds').innerText = "0" + seconds;
                }
                else {
                    document.getElementById('seconds').innerText = seconds;
                }
            }
        }, 1000);

        function ResetTimer() {
            document.getElementById('minutes').innerText = 1;
            document.getElementById('seconds').innerText = 30;
            document.getElementById('shot-glass-container').innerHTML = "";
            document.getElementById('draft-clock-container').style.borderColor = "white";
            document.getElementById('minutes').style.color = 'black';
            document.getElementById('seconds').style.color = 'black';
            penaltyTime = false;
        }

        jQuery(document).on('click', '#timer-start-pause-button', function () {
            timerPaused = !timerPaused;
        });

        jQuery(document).on('click', '#timer-restart-button', function () {
            ResetTimer();
        });

        jQuery(document).on('click', '#draft-player-by-id-button', function () {
            document.getElementById('SelectedPlayerId').value = document.getElementById('draft-player-input').value;

            $.ajax({
                type: "POST",
                url: '/Draft/DraftPlayer',
                data: $('#draft-room-form').serialize(),
                dataType: 'html',
                success: function (result) {
                    console.log('Player successfully drafted!');
                    $('#draft-board-container').html(result);
                    $("#warning-message").delay(3000).fadeOut("slow");
                    $("#success-message").delay(3000).fadeOut("slow");
                    ResetTimer();
                },
                error: function (xhr, status, error) {
                    console.log("There was an error drafting a player.");
                    console.log(status);
                    console.log(error);
                }
            });
        });

        jQuery(document).on('click', '#draft-player-by-name-button', function () {
            document.getElementById('SelectedPlayerName').value = document.getElementById('draft-player-input').value;

            $.ajax({
                type: "POST",
                url: '/Draft/DraftPlayer',
                data: $('#draft-room-form').serialize(),
                dataType: 'html',
                success: function (result) {
                    console.log('Player successfully drafted!');
                    $('#draft-board-container').html(result);
                    $("#warning-message").delay(3000).fadeOut("slow");
                    $("#success-message").delay(3000).fadeOut("slow");
                    ResetTimer();
                },
                error: function (xhr, status, error) {
                    console.log("There was an error drafting a player.");
                    console.log(status);
                    console.log(error);
                }
            });
        });

    </script>
}

<form id="draft-room-form">
    
    <div class="draft-board-header">
        <div id="draft-over-container" class="draft-over-container" style="display: none;">
            THE DRAFT IS OVER
        </div>
        
        <div id="draft-in-progress-container" class="draft-in-progress-container">
            <div>
                <input id="timer-start-pause-button" type="button" class="btn btn-success timer-button" value="S/P" />
                <input id="timer-restart-button" type="button" class="btn btn-warning timer-button" value="R" />
            </div>

            <div id="draft-clock-container" class="draft-clock-container">
                <span id="minutes">1</span>:<span id="seconds">30</span>
                <div id="shot-glass-container"></div>
            </div>

            <div class="draft-board-header-right">
                <div>
                    <input type="text" id="draft-player-input" />
                    <input type="button" value="Add Player By Id" id="draft-player-by-id-button" /><br />
                    <input type="button" value="Add Player By Name" id="draft-player-by-name-button" />
                </div>

                <div class="container draft-board-qr-code" id="QR-Code">
                    <div class="panel panel-info draft-board-header-panel">
                        <div class="panel-heading">
                            <div class="navbar-form navbar-right">
                                <select class="form-control" id="camera-select"></select>
                                <div class="form-group">
                                    <input id="image-url" type="text" class="form-control hidden" placeholder="Image url">
                                    <button title="Decode Image" class="btn btn-default btn-sm hidden" id="decode-img" type="button" data-toggle="tooltip">Decode Image</button>
                                    <button title="Image shoot" class="btn btn-info btn-sm disabled hidden" id="grab-img" type="button" data-toggle="tooltip">Grab Image</button>
                                    <button title="Play" class="btn btn-success btn-sm" id="play" type="button" data-toggle="tooltip">Play</button>
                                    <button title="Pause" class="btn btn-warning btn-sm" id="pause" type="button" data-toggle="tooltip">Pause</button>
                                    <button title="Stop streams" class="btn btn-danger btn-sm" id="stop" type="button" data-toggle="tooltip">Stop</button>
                                </div>
                            </div>
                        </div>
                        <div class="panel-body text-center">
                            <div class="col-md-6">
                                <div class="well" style="position: relative;display: inline-block;">
                                    <canvas width="320" height="240" id="webcodecam-canvas" class="qr-canvas"></canvas>
                                    <div class="scanner-laser laser-rightBottom" style="opacity: 0.5;"></div>
                                    <div class="scanner-laser laser-rightTop" style="opacity: 0.5;"></div>
                                    <div class="scanner-laser laser-leftBottom" style="opacity: 0.5;"></div>
                                    <div class="scanner-laser laser-leftTop" style="opacity: 0.5;"></div>
                                </div>
                                <div class="well hidden" style="width: 100%;">
                                    <label id="zoom-value" width="100">Zoom: 2</label>
                                    <input id="zoom" onchange="Page.changeZoom();" type="range" min="10" max="30" value="20">
                                    <label id="brightness-value" width="100">Brightness: 0</label>
                                    <input id="brightness" onchange="Page.changeBrightness();" type="range" min="0" max="128" value="0">
                                    <label id="contrast-value" width="100">Contrast: 0</label>
                                    <input id="contrast" onchange="Page.changeContrast();" type="range" min="0" max="64" value="0">
                                    <label id="threshold-value" width="100">Threshold: 0</label>
                                    <input id="threshold" onchange="Page.changeThreshold();" type="range" min="0" max="512" value="0">
                                    <label id="sharpness-value" width="100">Sharpness: off</label>
                                    <input id="sharpness" onchange="Page.changeSharpness();" type="checkbox">
                                    <label id="grayscale-value" width="100">grayscale: off</label>
                                    <input id="grayscale" onchange="Page.changeGrayscale();" type="checkbox">
                                    <br>
                                    <label id="flipVertical-value" width="100">Flip Vertical: off</label>
                                    <input id="flipVertical" onchange="Page.changeVertical();" type="checkbox">
                                    <label id="flipHorizontal-value" width="100">Flip Horizontal: off</label>
                                    <input id="flipHorizontal" onchange="Page.changeHorizontal();" type="checkbox">
                                </div>
                            </div>
                            @*<div class="col-md-6">
                            <div class="thumbnail" id="result">
                                <div class="well" style="overflow: hidden;">
                                    <img width="320" height="240" id="scanned-img" src="">
                                </div>
                                <div class="caption">
                                    <h3>Scanned result</h3>
                                    <p id="scanned-QR"></p>
                                </div>
                            </div>
                        </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="draft-container row">
        <div id="draft-board-container" class="draft-board-container col-sm-12">
            @Html.Partial("_DraftBoard", Model)
        </div>
    </div>
</form>