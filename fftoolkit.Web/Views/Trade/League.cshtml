@model fftoolkit.Web.Models.TradesViewModel

@{
    ViewBag.Title = "Find Trades";
}

@section scripts {
    <script type="text/javascript">

        $("#find-trades").click(function () {
            ShowLoadingModal();
            console.log('Find trades started.');
            FindTrades();
        });

        jQuery(document).on('click', '.trade', function () {
            ShowLoadingModal();
            var tradeId = $(this).data('trade-id');
            console.log('Show trade with id:' + tradeId);
            GetTradeDetail(tradeId);
        });

        jQuery(document).on('click', '.page-link', function () {
            ShowLoadingModal();
            var pageIndex = $(this).data('index');
            console.log('Go to page ' + pageIndex);
            document.getElementById('TradePage').value = pageIndex;
            ChangePage();
        });

        jQuery(document).on('click', '#my-filter-header', function () {
            console.log('Showing team selector for my team.')
            document.getElementById('TeamSelectorMode').value = 'MyTeam';
            ShowTeamSelectorList();
            $('#teamSelectorModal').modal('show');
        });

        jQuery(document).on('click', '#their-filter-header', function () {
            console.log('Showing team selector for their team.')
            document.getElementById('TeamSelectorMode').value = 'TheirTeam';
            ShowTeamSelectorList();
            $('#teamSelectorModal').modal('show');
        });

        jQuery(document).on('click', '.team-selector-team', function () {
            var selectorMode = document.getElementById('TeamSelectorMode').value;
            var teamName = $(this).data('team-name');
            document.getElementById('SelectedTeamId').value = $(this).data('team-id');
            console.log("Setting " + teamName + " as " + selectorMode);
            SetTeam();
        });

        function ShowLoadingModal() {
            console.log('Showing loading modal.');
            $('#loadingModal').modal({ backdrop: 'static', keyboard: false, show: true });
        }

        function HideLoadingModal() {
            console.log('Hiding loading modal.');
            $('#loadingModal').modal('hide');
        }

        function FindTrades() {
            $.ajax({
                type: "POST",
                url: '/Trade/FindTrades',
                data: $('#TradeForm').serialize(),
                dataType: 'html',
                success: function (result) {
                    console.log('Trades found success!');
                    $('#trade-results').html(result);
                    HideLoadingModal();
                },
                error: function (xhr, status, error) {
                    console.log("There was an error finding trades!")
                    console.log(status);
                    console.log(error);
                    HideLoadingModal();
                }
            });
        };

        function ChangePage() {
            $.ajax({
                type: "POST",
                url: '/Trade/ChangePage',
                data: $('#TradeForm').serialize(),
                dataType: 'html',
                success: function (result) {
                    console.log('Change page success!');
                    $('#trade-results').html(result);
                    HideLoadingModal();
                },
                error: function (xhr, status, error) {
                    console.log("There was an error changing the page!")
                    console.log(status);
                    console.log(error);
                    HideLoadingModal();
                }
            });
        };

        function GetTradeDetail(tradeId) {
            $.ajax({
                type: "GET",
                url: '/Trade/GetTradeDetail/' + tradeId,
                dataType: 'html',
                success: function (result) {
                    console.log('Trade found with id: ' + tradeId);
                    $('#trade-detail').html(result);
                    $('#tradeDetailModal').modal({ show: true });
                    HideLoadingModal();
                },
                error: function (xhr, status, error) {
                    console.log("There was an error trying to find trade with id: " + tradeId)
                    console.log(status);
                    console.log(error);
                    HideLoadingModal();
                }
            });
        };

        function ShowTeamSelectorList() {
            $.ajax({
                type: "POST",
                url: '/Trade/ShowTeamSelectorList',
                data: $('#TradeForm').serialize(),
                dataType: 'html',
                success: function (result) {
                    console.log('Teams found successfully!');
                    $('#team-selector-list').html(result);
                    HideLoadingModal();
                },
                error: function (xhr, status, error) {
                    console.log("There was an error showing the team list!")
                    console.log(status);
                    console.log(error);
                    HideLoadingModal();
                }
            });
        };

        function SetTeam() {
            $.ajax({
                type: "POST",
                url: '/Trade/SetFilterTeam',
                data: $('#TradeForm').serialize(),
                dataType: 'html',
                success: function (result) {
                    console.log('Team set successfully!');
                    $('#trade-filter').html(result);
                    HideLoadingModal();
                },
                error: function (xhr, status, error) {
                    console.log("There was an error setting the team!")
                    console.log(status);
                    console.log(error);
                    HideLoadingModal();
                }
            });

            $('#teamSelectorModal').modal('hide');
        };

    </script>
}

<h2>Find Trades</h2>

<form id="TradeForm">
    <div class="row">
        <div class="col-sm-12 col-md-4 col-lg-3">
            <div class="trade-filters">
                <div id="trade-filter">
                    @Html.Partial("TradeFilter")
                </div>
                <input id="find-trades" type="button" value="Find Trades" class="btn btn-primary" />
            </div>
        </div>

        <div id="trade-results" class="col-sm-12 col-md-8 col-lg-9"></div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="teamSelectorModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Select Your Team</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div id="team-selector-list"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="tradeDetailModal">
        <div class="modal-dialog modal-xl trade-detail-modal" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Trade Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="trade-detail"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="loadingModal">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Finding Trades...</h5>
                </div>
                <div class="modal-body">
                    <center>
                        <div class="spinner-border loading-spinner"></div>
                    </center>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" tabindex="-1" role="dialog" id="tradeFilterModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Select a Player or Position</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">Player</div>
                                <div class="list-group ">
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Case Keenum (QB, DEN)
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Leveon Bell (RB, PIT)
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        David Johnson (RB, ARI)
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Antonio Brown Bell (WR, PIT)
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Mide Evans (WR, TB)
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Delanie Walker (TE, TEN)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">Position</div>
                                <div class="list-group ">
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Quarterback
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Running Back
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Wide Receiver
                                    </div>
                                    <div class="list-group-item list-group-item-action trade-filter-item" data-toggle="modal" data-target="#tradeFilterModal">
                                        Tight End
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(m => Model.TeamSelectorMode)
    @Html.HiddenFor(m => Model.SelectedTeamId)
    @Html.HiddenFor(m => Model.TradePage)
    @Html.HiddenFor(m => Model.League.LeagueId)
    @Html.HiddenFor(m => Model.League.UserId)
    @Html.HiddenFor(m => Model.League.Name)
    @Html.HiddenFor(m => Model.League.Url)
    @Html.HiddenFor(m => Model.League.Quarterbacks)
    @Html.HiddenFor(m => Model.League.RunningBacks)
    @Html.HiddenFor(m => Model.League.WideReceivers)
    @Html.HiddenFor(m => Model.League.TightEnds)
    @Html.HiddenFor(m => Model.League.Flexes)
    @Html.HiddenFor(m => Model.League.PointsPerReception)
    @Html.HiddenFor(m => Model.League.PointsPerPassingYard)
    @Html.HiddenFor(m => Model.League.PointsPerPassingTouchdown)
    @Html.HiddenFor(m => Model.League.PointsLostPerInterception)

    @for (int i = 0; i < Model.Teams.Count; i++)
    {
        @Html.HiddenFor(m => m.Teams[i].TeamId)
        @Html.HiddenFor(m => m.Teams[i].Name)
        @Html.HiddenFor(m => m.Teams[i].Url)

        for (int j = 0; j < Model.Teams[i].Players.Count; j++)
        {
            @Html.HiddenFor(m => Model.Teams[i].Players[j].PlayerId)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].Name)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].Position)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].Team)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].PassingYards)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].PassingTouchdowns)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].Interceptions)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].RushingYards)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].RushingTouchdowns)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].Receptions)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].ReceivingYards)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].ReceivingTouchdowns)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].FantasyPoints)
            @Html.HiddenFor(m => Model.Teams[i].Players[j].TradeValue)
        }
    }

    @for (int i = 0; i < Model.MyFilters.Count; i++)
    {
        @Html.HiddenFor(m => Model.MyFilters[i])

        if (Model.MyFilters[i] != null)
        {
            @Html.HiddenFor(m => Model.MyFilters[i].Type)
            @Html.HiddenFor(m => Model.MyFilters[i].Position)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.PlayerId)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.Name)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.Position)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.Team)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.PassingYards)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.PassingTouchdowns)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.Interceptions)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.RushingYards)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.RushingTouchdowns)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.Receptions)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.ReceivingYards)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.ReceivingTouchdowns)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.FantasyPoints)
            @Html.HiddenFor(m => Model.MyFilters[i].Player.GamesPlayed)
        }
    }

    @for (int i = 0; i < Model.TheirFilters.Count; i++)
    {
        @Html.HiddenFor(m => Model.TheirFilters[i])

        if (Model.TheirFilters[i] != null)
        {
            @Html.HiddenFor(m => Model.TheirFilters[i].Type)
            @Html.HiddenFor(m => Model.TheirFilters[i].Position)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.PlayerId)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.Name)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.Position)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.Team)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.PassingYards)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.PassingTouchdowns)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.Interceptions)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.RushingYards)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.RushingTouchdowns)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.Receptions)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.ReceivingYards)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.ReceivingTouchdowns)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.FantasyPoints)
            @Html.HiddenFor(m => Model.TheirFilters[i].Player.GamesPlayed)
        }
    }
</form>