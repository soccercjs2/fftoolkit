@model fftoolkit.Web.ViewModels.TradesViewModel

<div class="trade-list">
    @if (Model.Trades == null || Model.Trades.Count == 0)
    {
        <span class="">
            No trades found.
        </span>
    }
    else
    {
        for (int i = (Model.TradePage - 1) * 3; i < Math.Min((Model.TradePage - 1) * 3 + 3, Model.Trades.Count); i++)
        {
            <div class="row trade" data-toggle="modal" data-target="#tradeModal">
                <div class="col-md-12 col-lg-6">
                    @* My Trade *@
                    @Html.DisplayFor(m => Model.Trades[i].MyTradeSide)
                </div>
                <div class="col-md-12 col-lg-6">
                    @* Their Trade *@
                    @Html.DisplayFor(m => Model.Trades[i].TheirTradeSide)
                </div>
            </div>
        }
    }
</div>

@if (Model.Trades != null && Model.Trades.Count > 0)
{
    <nav aria-label="Trade Pages">
        <ul class="pagination">
            @if (Model.TradePage > 1)
            {
                <li class="page-item"><a class="page-link" href="#" data-index="1">First</a></li>
                <li class="page-item"><a class="page-link" href="#" data-index="@Model.TradePage - 1">Previous</a></li>
            }

            @for (int i = Model.TradePage; i <= Math.Min(Model.Trades.Count / 3 + 1, 16); i++)
            {
                <li class="page-item"><a class="page-link" href="#" data-index="@i">@i</a></li>
            }

            <li class="page-item"><a class="page-link" href="#">...</a></li>

            @if (Model.TradePage < Model.Trades.Count / 3 + 1)
            {
                <li class="page-item"><a class="page-link" href="#" data-index="@Model.TradePage + 1">Next</a></li>
            }
        </ul>
    </nav>
}
